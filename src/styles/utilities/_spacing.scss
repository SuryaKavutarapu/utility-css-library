/**
 * Spacing Utilities
 * Margin and padding utilities with all directions and responsive variants
 */

@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;

// Margin utilities
@each $key, $value in $spacing {
  // All sides
  .m-#{$key} { margin: #{$value}; }
  
  // Horizontal
  .mx-#{$key} { 
    margin-left: #{$value};
    margin-right: #{$value};
  }
  
  // Vertical
  .my-#{$key} {
    margin-top: #{$value};
    margin-bottom: #{$value};
  }
  
  // Individual sides
  .mt-#{$key} { margin-top: #{$value}; }
  .mr-#{$key} { margin-right: #{$value}; }
  .mb-#{$key} { margin-bottom: #{$value}; }
  .ml-#{$key} { margin-left: #{$value}; }
  
  // Start/End (for RTL support)
  .ms-#{$key} { margin-inline-start: #{$value}; }
  .me-#{$key} { margin-inline-end: #{$value}; }
}

// Padding utilities
@each $key, $value in $spacing {
  // All sides
  .p-#{$key} { padding: #{$value}; }
  
  // Horizontal
  .px-#{$key} { 
    padding-left: #{$value};
    padding-right: #{$value};
  }
  
  // Vertical
  .py-#{$key} {
    padding-top: #{$value};
    padding-bottom: #{$value};
  }
  
  // Individual sides
  .pt-#{$key} { padding-top: #{$value}; }
  .pr-#{$key} { padding-right: #{$value}; }
  .pb-#{$key} { padding-bottom: #{$value}; }
  .pl-#{$key} { padding-left: #{$value}; }
  
  // Start/End (for RTL support)
  .ps-#{$key} { padding-inline-start: #{$value}; }
  .pe-#{$key} { padding-inline-end: #{$value}; }
}

// Space between utilities
@each $key, $value in $spacing {
  .space-x-#{$key} > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(#{$value} * var(--tw-space-x-reverse));
    margin-left: calc(#{$value} * calc(1 - var(--tw-space-x-reverse)));
  }
  
  .space-y-#{$key} > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(#{$value} * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(#{$value} * var(--tw-space-y-reverse));
  }
}

// Space reverse utilities
.space-x-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 1;
}

.space-y-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 1;
}

// Auto margins
.m-auto { margin: auto; }
.mx-auto { 
  margin-left: auto;
  margin-right: auto;
}
.my-auto {
  margin-top: auto;
  margin-bottom: auto;
}
.mt-auto { margin-top: auto; }
.mr-auto { margin-right: auto; }
.mb-auto { margin-bottom: auto; }
.ml-auto { margin-left: auto; }
.ms-auto { margin-inline-start: auto; }
.me-auto { margin-inline-end: auto; }

// Responsive variants
@include responsive-utilities {
  @each $key, $value in $spacing {
    // Margin utilities
    .m-#{$key} { margin: #{$value}; }
    .mx-#{$key} { 
      margin-left: #{$value};
      margin-right: #{$value};
    }
    .my-#{$key} {
      margin-top: #{$value};
      margin-bottom: #{$value};
    }
    .mt-#{$key} { margin-top: #{$value}; }
    .mr-#{$key} { margin-right: #{$value}; }
    .mb-#{$key} { margin-bottom: #{$value}; }
    .ml-#{$key} { margin-left: #{$value}; }
    .ms-#{$key} { margin-inline-start: #{$value}; }
    .me-#{$key} { margin-inline-end: #{$value}; }
    
    // Padding utilities
    .p-#{$key} { padding: #{$value}; }
    .px-#{$key} { 
      padding-left: #{$value};
      padding-right: #{$value};
    }
    .py-#{$key} {
      padding-top: #{$value};
      padding-bottom: #{$value};
    }
    .pt-#{$key} { padding-top: #{$value}; }
    .pr-#{$key} { padding-right: #{$value}; }
    .pb-#{$key} { padding-bottom: #{$value}; }
    .pl-#{$key} { padding-left: #{$value}; }
    .ps-#{$key} { padding-inline-start: #{$value}; }
    .pe-#{$key} { padding-inline-end: #{$value}; }
    
    // Space between utilities
    .space-x-#{$key} > :not([hidden]) ~ :not([hidden]) {
      --tw-space-x-reverse: 0;
      margin-right: calc(#{$value} * var(--tw-space-x-reverse));
      margin-left: calc(#{$value} * calc(1 - var(--tw-space-x-reverse)));
    }
    
    .space-y-#{$key} > :not([hidden]) ~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(#{$value} * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(#{$value} * var(--tw-space-y-reverse));
    }
  }
  
  // Auto margins
  .m-auto { margin: auto; }
  .mx-auto { 
    margin-left: auto;
    margin-right: auto;
  }
  .my-auto {
    margin-top: auto;
    margin-bottom: auto;
  }
  .mt-auto { margin-top: auto; }
  .mr-auto { margin-right: auto; }
  .mb-auto { margin-bottom: auto; }
  .ml-auto { margin-left: auto; }
  .ms-auto { margin-inline-start: auto; }
  .me-auto { margin-inline-end: auto; }
}
