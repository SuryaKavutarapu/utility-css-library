/**
 * Borders & Effects Utilities
 * Border width, radius, style, shadows, and visual effects
 */

@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;

// Border width utilities
@each $key, $value in $border-widths {
  .border-#{$key} { border-width: #{$value} !important; }
  .border-x-#{$key} { 
    border-left-width: #{$value} !important;
    border-right-width: #{$value} !important;
  }
  .border-y-#{$key} {
    border-top-width: #{$value} !important;
    border-bottom-width: #{$value} !important;
  }
  .border-s-#{$key} { border-inline-start-width: #{$value} !important; }
  .border-e-#{$key} { border-inline-end-width: #{$value} !important; }
  .border-t-#{$key} { border-top-width: #{$value} !important; }
  .border-r-#{$key} { border-right-width: #{$value} !important; }
  .border-b-#{$key} { border-bottom-width: #{$value} !important; }
  .border-l-#{$key} { border-left-width: #{$value} !important; }
}

// Default border
.border { border-width: 1px !important; }

// Border radius utilities
@each $key, $value in $border-radius {
  .rounded-#{$key} { border-radius: #{$value} !important; }
  
  // Individual corners
  .rounded-t-#{$key} {
    border-top-left-radius: #{$value} !important;
    border-top-right-radius: #{$value} !important;
  }
  .rounded-r-#{$key} {
    border-top-right-radius: #{$value} !important;
    border-bottom-right-radius: #{$value} !important;
  }
  .rounded-b-#{$key} {
    border-bottom-right-radius: #{$value} !important;
    border-bottom-left-radius: #{$value} !important;
  }
  .rounded-l-#{$key} {
    border-top-left-radius: #{$value} !important;
    border-bottom-left-radius: #{$value} !important;
  }
  
  // Start/End (for RTL support)
  .rounded-s-#{$key} {
    border-start-start-radius: #{$value} !important;
    border-end-start-radius: #{$value} !important;
  }
  .rounded-e-#{$key} {
    border-start-end-radius: #{$value} !important;
    border-end-end-radius: #{$value} !important;
  }
  
  // Specific corners
  .rounded-tl-#{$key} { border-top-left-radius: #{$value} !important; }
  .rounded-tr-#{$key} { border-top-right-radius: #{$value} !important; }
  .rounded-br-#{$key} { border-bottom-right-radius: #{$value} !important; }
  .rounded-bl-#{$key} { border-bottom-left-radius: #{$value} !important; }
  
  // Logical corners
  .rounded-ss-#{$key} { border-start-start-radius: #{$value} !important; }
  .rounded-se-#{$key} { border-start-end-radius: #{$value} !important; }
  .rounded-ee-#{$key} { border-end-end-radius: #{$value} !important; }
  .rounded-es-#{$key} { border-end-start-radius: #{$value} !important; }
}

// Default rounded
.rounded { border-radius: $border-radius-base !important; }

// Border style utilities
.border-solid { border-style: solid !important; }
.border-dashed { border-style: dashed !important; }
.border-dotted { border-style: dotted !important; }
.border-double { border-style: double !important; }
.border-hidden { border-style: hidden !important; }
.border-none { border-style: none !important; }

// Divide utilities (for spacing between children)
@each $key, $value in $border-widths {
  .divide-x-#{$key} > :not([hidden]) ~ :not([hidden]) {
    border-right-width: 0 !important;
    border-left-width: #{$value} !important;
  }
  
  .divide-y-#{$key} > :not([hidden]) ~ :not([hidden]) {
    border-top-width: #{$value} !important;
    border-bottom-width: 0 !important;
  }
}

.divide-x > :not([hidden]) ~ :not([hidden]) {
  border-right-width: 0 !important;
  border-left-width: 1px !important;
}

.divide-y > :not([hidden]) ~ :not([hidden]) {
  border-top-width: 1px !important;
  border-bottom-width: 0 !important;
}

.divide-x-reverse > :not([hidden]) ~ :not([hidden]) {
  border-right-width: 1px !important;
  border-left-width: 0 !important;
}

.divide-y-reverse > :not([hidden]) ~ :not([hidden]) {
  border-top-width: 0 !important;
  border-bottom-width: 1px !important;
}

// Divide style
.divide-solid > :not([hidden]) ~ :not([hidden]) {
  border-style: solid !important;
}
.divide-dashed > :not([hidden]) ~ :not([hidden]) {
  border-style: dashed !important;
}
.divide-dotted > :not([hidden]) ~ :not([hidden]) {
  border-style: dotted !important;
}
.divide-double > :not([hidden]) ~ :not([hidden]) {
  border-style: double !important;
}
.divide-none > :not([hidden]) ~ :not([hidden]) {
  border-style: none !important;
}

// Outline utilities
.outline-none {
  outline: 2px solid transparent !important;
  outline-offset: 2px !important;
}
.outline { 
  outline-style: solid !important;
  outline-width: 2px !important;
  outline-offset: 2px !important;
}
.outline-dashed {
  outline-style: dashed !important;
  outline-width: 1px !important;
  outline-offset: 2px !important;
}
.outline-dotted {
  outline-style: dotted !important;
  outline-width: 1px !important;
  outline-offset: 2px !important;
}
.outline-double {
  outline-style: double !important;
  outline-width: 3px !important;
  outline-offset: 2px !important;
}

// Outline width
.outline-0 { outline-width: 0px !important; }
.outline-1 { outline-width: 1px !important; }
.outline-2 { outline-width: 2px !important; }
.outline-4 { outline-width: 4px !important; }
.outline-8 { outline-width: 8px !important; }

// Outline offset
.outline-offset-0 { outline-offset: 0px !important; }
.outline-offset-1 { outline-offset: 1px !important; }
.outline-offset-2 { outline-offset: 2px !important; }
.outline-offset-4 { outline-offset: 4px !important; }
.outline-offset-8 { outline-offset: 8px !important; }

// Ring utilities (for focus states)
.ring-0 {
  box-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}
.ring-1 {
  box-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}
.ring-2 {
  box-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}
.ring-4 {
  box-shadow: var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}
.ring-8 {
  box-shadow: var(--tw-ring-inset) 0 0 0 calc(8px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}
.ring {
  box-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color) !important;
}

.ring-inset { --tw-ring-inset: inset; }

// Ring offset
.ring-offset-0 { 
  --tw-ring-offset-width: 0px;
  box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);
}
.ring-offset-1 { 
  --tw-ring-offset-width: 1px;
  box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);
}
.ring-offset-2 { 
  --tw-ring-offset-width: 2px;
  box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);
}
.ring-offset-4 { 
  --tw-ring-offset-width: 4px;
  box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);
}
.ring-offset-8 { 
  --tw-ring-offset-width: 8px;
  box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);
}

// Box shadow utilities
@each $key, $value in $shadows {
  .shadow-#{$key} { box-shadow: #{$value} !important; }
}

.shadow { box-shadow: $shadow-base !important; }

// Drop shadow utilities
.drop-shadow-sm { filter: drop-shadow(0 1px 1px rgb(0 0 0 / 0.05)) !important; }
.drop-shadow { filter: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.06)) !important; }
.drop-shadow-md { filter: drop-shadow(0 4px 3px rgb(0 0 0 / 0.07)) drop-shadow(0 2px 2px rgb(0 0 0 / 0.06)) !important; }
.drop-shadow-lg { filter: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1)) !important; }
.drop-shadow-xl { filter: drop-shadow(0 20px 13px rgb(0 0 0 / 0.03)) drop-shadow(0 8px 5px rgb(0 0 0 / 0.08)) !important; }
.drop-shadow-2xl { filter: drop-shadow(0 25px 25px rgb(0 0 0 / 0.15)) !important; }
.drop-shadow-none { filter: drop-shadow(0 0 #0000) !important; }

// Opacity utilities
@for $i from 0 through 100 {
  @if $i % 5 == 0 {
    .opacity-#{$i} { opacity: #{$i / 100} !important; }
  }
}

// Additional common opacity values
.opacity-1 { opacity: 0.01 !important; }
.opacity-2 { opacity: 0.02 !important; }
.opacity-3 { opacity: 0.03 !important; }
.opacity-4 { opacity: 0.04 !important; }
.opacity-6 { opacity: 0.06 !important; }
.opacity-7 { opacity: 0.07 !important; }
.opacity-8 { opacity: 0.08 !important; }
.opacity-9 { opacity: 0.09 !important; }

// Mix blend mode
.mix-blend-normal { mix-blend-mode: normal !important; }
.mix-blend-multiply { mix-blend-mode: multiply !important; }
.mix-blend-screen { mix-blend-mode: screen !important; }
.mix-blend-overlay { mix-blend-mode: overlay !important; }
.mix-blend-darken { mix-blend-mode: darken !important; }
.mix-blend-lighten { mix-blend-mode: lighten !important; }
.mix-blend-color-dodge { mix-blend-mode: color-dodge !important; }
.mix-blend-color-burn { mix-blend-mode: color-burn !important; }
.mix-blend-hard-light { mix-blend-mode: hard-light !important; }
.mix-blend-soft-light { mix-blend-mode: soft-light !important; }
.mix-blend-difference { mix-blend-mode: difference !important; }
.mix-blend-exclusion { mix-blend-mode: exclusion !important; }
.mix-blend-hue { mix-blend-mode: hue !important; }
.mix-blend-saturation { mix-blend-mode: saturation !important; }
.mix-blend-color { mix-blend-mode: color !important; }
.mix-blend-luminosity { mix-blend-mode: luminosity !important; }
.mix-blend-plus-darker { mix-blend-mode: plus-darker !important; }
.mix-blend-plus-lighter { mix-blend-mode: plus-lighter !important; }

// Background blend mode
.bg-blend-normal { background-blend-mode: normal !important; }
.bg-blend-multiply { background-blend-mode: multiply !important; }
.bg-blend-screen { background-blend-mode: screen !important; }
.bg-blend-overlay { background-blend-mode: overlay !important; }
.bg-blend-darken { background-blend-mode: darken !important; }
.bg-blend-lighten { background-blend-mode: lighten !important; }
.bg-blend-color-dodge { background-blend-mode: color-dodge !important; }
.bg-blend-color-burn { background-blend-mode: color-burn !important; }
.bg-blend-hard-light { background-blend-mode: hard-light !important; }
.bg-blend-soft-light { background-blend-mode: soft-light !important; }
.bg-blend-difference { background-blend-mode: difference !important; }
.bg-blend-exclusion { background-blend-mode: exclusion !important; }
.bg-blend-hue { background-blend-mode: hue !important; }
.bg-blend-saturation { background-blend-mode: saturation !important; }
.bg-blend-color { background-blend-mode: color !important; }
.bg-blend-luminosity { background-blend-mode: luminosity !important; }

// Responsive variants
@include responsive-utilities {
  // Border width
  @each $key, $value in $border-widths {
    .border-#{$key} { border-width: #{$value} !important; }
  }
  
  // Border radius
  @each $key, $value in $border-radius {
    .rounded-#{$key} { border-radius: #{$value} !important; }
  }
  
  // Shadows
  @each $key, $value in $shadows {
    .shadow-#{$key} { box-shadow: #{$value} !important; }
  }
  
  // Opacity
  @for $i from 0 through 100 {
    @if $i % 5 == 0 {
      .opacity-#{$i} { opacity: #{$i / 100} !important; }
    }
  }
}
