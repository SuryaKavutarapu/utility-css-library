// =============================================================================
// Mixins - Reusable SCSS Functions
// =============================================================================

// Responsive utilities mixin
@mixin responsive-utilities {
  // Base utilities (mobile-first)
  @content;
}

// Responsive breakpoint mixin
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  }
  @if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  }
  @if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  }
  @if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  }
  @if $breakpoint == 2xl {
    @media (min-width: $breakpoint-2xl) { @content; }
  }
}

// Custom breakpoint mixin
@mixin respond-above($size) {
  @media (min-width: $size) { @content; }
}

@mixin respond-below($size) {
  @media (max-width: ($size - 1px)) { @content; }
}

@mixin respond-between($min, $max) {
  @media (min-width: $min) and (max-width: ($max - 1px)) { @content; }
}

// Focus visible mixin for accessibility
@mixin focus-visible {
  &:focus-visible {
    outline: 2px solid $surface-focus;
    outline-offset: 2px;
  }
}

// Button reset mixin
@mixin button-reset {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
  
  &:disabled {
    cursor: not-allowed;
  }
}

// Visually hidden (accessible hiding)
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Truncate text
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Multi-line truncate
@mixin line-clamp($lines) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-center-y {
  display: flex;
  align-items: center;
}

@mixin flex-center-x {
  display: flex;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

// Position utilities
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-cover {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

// Transitions
@mixin transition($properties: all, $duration: $transition-duration-200, $timing: $transition-timing-in-out) {
  transition: $properties $duration $timing;
}

// Hover effects
@mixin hover-lift {
  @include transition(transform, $transition-duration-200);
  
  &:hover {
    transform: translateY(-1px);
  }
}

@mixin hover-scale($scale: 1.05) {
  @include transition(transform, $transition-duration-200);
  
  &:hover {
    transform: scale($scale);
  }
}

// Component states
@mixin component-state($state, $bg-color, $text-color: null, $border-color: null) {
  &--#{$state} {
    background-color: $bg-color;
    
    @if $text-color {
      color: $text-color;
    }
    
    @if $border-color {
      border-color: $border-color;
    }
  }
}

// Size variants
@mixin size-variant($size, $height, $padding, $font-size) {
  &--#{$size} {
    height: $height;
    padding: $padding;
    font-size: $font-size;
  }
}

// Disabled state
@mixin disabled-state {
  &:disabled,
  &--disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }
}

// Loading state
@mixin loading-state {
  &--loading {
    position: relative;
    color: transparent;
    pointer-events: none;
    
    &::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 1rem;
      height: 1rem;
      margin: -0.5rem 0 0 -0.5rem;
      border: 2px solid currentColor;
      border-right-color: transparent;
      border-radius: 50%;
      animation: spin 0.6s linear infinite;
    }
  }
}

// Animations
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slide-up {
  from {
    transform: translateY(10px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slide-down {
  from {
    transform: translateY(-10px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

// Dark theme mixin
@mixin dark-theme {
  [data-theme="dark"] & {
    @content;
  }
}

// Gradient mixins
@mixin gradient-primary {
  background: linear-gradient(135deg, $primary-500, $primary-600);
}

@mixin gradient-secondary {
  background: linear-gradient(135deg, $secondary-500, $secondary-600);
}

@mixin gradient-success {
  background: linear-gradient(135deg, $success-500, $success-600);
}

@mixin gradient-warning {
  background: linear-gradient(135deg, $warning-500, $warning-600);
}

@mixin gradient-error {
  background: linear-gradient(135deg, $error-500, $error-600);
}

// Custom scrollbar
@mixin custom-scrollbar($width: 8px, $track-color: $neutral-100, $thumb-color: $neutral-300) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $border-radius-full;
    
    &:hover {
      background: darken($thumb-color, 10%);
    }
  }
}
